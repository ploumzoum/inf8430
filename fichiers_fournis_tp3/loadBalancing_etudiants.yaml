heat_template_version: 2014-10-16

description: A template to deploy a load balanced web server

parameters:

  image:
    type: string
    description: Image utilisee pour les serveurs
    default: INF4410-Ubuntu-trusty-mini
    constraints:
      - allowed_values: [ INF4410-Ubuntu-trusty-mini ]

  flavor:
    type: string
    description: Flavor utilisee par les serveurs
    default: INF4410-mini
    constraints:
      - allowed_values: [ INF4410-mini ]

  subnet_id:
    type: string
    description: Sous-reseau dans lequel le load balancer sera situe
    default: 0c3b1354-d3d5-4fec-86d3-19d4d1f13785 
    constraints:
      - allowed_values: [ 0c3b1354-d3d5-4fec-86d3-19d4d1f13785 ]

    # Vous pouvez ajouter d'autres paramètres
    # Il faut bien définir les descriptions, les valeurs par default et les contraintes

resources:
  server_nodes:
      type: OS::Heat::ResourceGroup
      properties:
          count: 2
          resource_def:
            type: OS::Nova::Server
            properties:
              # create a unique name for each server
              # using its index in the group
              name: my_server_%index%
              image: {get_param: image}
              flavor: {get_param: flavor}
              user_data: |
                        #!/bin/bash
                        curl -o server.py https://raw.githubusercontent.com/houssemmh/INF8480-TP3/master/server.py
                        python server.py
                        # ...


  mypool:
      type: OS::Neutron::Pool
      properties:
          protocol: HTTP
          monitors: [{get_resource: mymonitor}]
          subnet_id: {get_param: subnet_id}
          lb_method: ROUND_ROBIN
          vip:
            protocol_port: 8080

  myloadbalancer:
      type: OS::Neutron::LoadBalancer
      properties:
          protocol_port: 8080
          pool_id: {get_resource: mypool}

  mymonitor:
      type: OS::Neutron::HealthMonitor
      properties:
          type: HTTP
          delay: 15
          max_retries: 5
          timeout: 5


outputs:
  pool_ip_address:
    value: {get_attr: [mypool, vip, address]}
    description: The IP address of the load balancing pool
